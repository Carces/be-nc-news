{
  "GET /api": {
    "description": "serves up a json representation of all the available endpoints of the api"
  },
  "GET /api/topics": {
    "description": "serves an array of all topics",
    "queries": [],
    "exampleResponse": {
      "topics": [{ "description": "Footie!", "slug": "football" }]
    }
  },
  "POST /api/topics": {
    "description": "posts the topic sent in the request body to the database and serves the posted topic",
    "queries": [],
    "exampleRequestBody": {
      "postedTopic": [{ "description": "Footie!", "slug": "football" }]
    },
    "exampleResponse": {
      "postedTopic": [{ "description": "Footie!", "slug": "football" }]
    }
  },
  "DELETE /api/topics/:slug": {
    "description": "deletes the topic with the specified slug from the database. If any articles are linked to this topic, their topic is set to null",
    "queries": [],
    "exampleResponse": {}
  },
  "GET /api/articles": {
    "description": "serves an array of articles without body text.",
    "queries": ["topic", "author", "sort_by", "order", "limit", "p"],
    "exampleResponse": {
      "articles": [
        {
          "article_id": 7,
          "author": "icellusedkars",
          "topic": "mitch",
          "title": "Z",
          "created_at": "2020-01-07T14:08:00.000Z",
          "votes": 0,
          "article_img_url": "https://images.pexels.com/photos/158651/news-newsletter-newspaper-information-158651.jpeg?w=700&h=700",
          "comment_count": 0,
          "total_count": 12
        }
      ]
    }
  },
  "POST /api/articles": {
    "description": "posts the article sent in the request body to the database and serves the posted article",
    "queries": [],
    "exampleResponse": {
      "articles": [
        {
          "article_id": 7,
          "author": "icellusedkars",
          "topic": "mitch",
          "title": "Z",
          "created_at": "2020-01-07T14:08:00.000Z",
          "votes": 0,
          "article_img_url": "https://images.pexels.com/photos/158651/news-newsletter-newspaper-information-158651.jpeg?w=700&h=700",
          "comment_count": 0
        }
      ]
    }
  },
  "GET /api/articles/:article_id": {
    "description": "serves an article with body text",
    "queries": ["topic", "sort_by", "order"],
    "exampleResponse": {
      "article": {
        "article_id": 2,
        "author": "icellusedkars",
        "topic": "mitch",
        "title": "Sony Vaio; or, The Laptop",
        "body": "Call me Mitchell.",
        "created_at": "2020-10-16T05:03:00.000Z",
        "votes": 0,
        "article_img_url": "https://images.pexels.com/photos/158651/news-newsletter-newspaper-information-158651.jpeg?w=700&h=700",
        "comment_count": 0
      }
    }
  },
  "GET /api/articles/random": {
    "description": "serves a random article with body text",
    "queries": ["topic"],
    "exampleResponse": {
      "article": {
        "article_id": 2,
        "author": "icellusedkars",
        "topic": "mitch",
        "title": "Sony Vaio; or, The Laptop",
        "body": "Call me Mitchell.",
        "created_at": "2020-10-16T05:03:00.000Z",
        "votes": 0,
        "article_img_url": "https://images.pexels.com/photos/158651/news-newsletter-newspaper-information-158651.jpeg?w=700&h=700",
        "comment_count": 0
      }
    }
  },
  "PATCH /api/articles/:article_id": {
    "description": "updates an article. If the request body has an inc_votes property, increments the article's votes property by the value of inc_votes. If the request body has an article_img_url property, replaces the article's article_img_url with the updated one. Serves the updated article",
    "queries": [],
    "exampleResponse": {
      "updatedArticle": {
        "article_id": 2,
        "author": "icellusedkars",
        "topic": "mitch",
        "title": "Sony Vaio; or, The Laptop",
        "body": "Call me Mitchell.",
        "created_at": "2020-10-16T05:03:00.000Z",
        "votes": 3,
        "article_img_url": "https://images.pexels.com/photos/158651/news-newsletter-newspaper-information-158651.jpeg?w=700&h=700",
        "comment_count": 0
      }
    }
  },
  "DELETE /api/articles/:article_id": {
    "description": "deletes the article with the specified article_id from the database",
    "queries": [],
    "exampleResponse": {}
  },
  "POST /api/articles/:article_id/comments": {
    "description": "posts a new comment to the article with the specified article_id. Serves the posted comment",
    "queries": [],
    "exampleResponse": {
      "postedComment": {
        "comment_id": 19,
        "body": "Loved it, great article!",
        "article_id": 2,
        "author": "butter_bridge",
        "votes": 0,
        "created_at": "2023-02-21T15:40:36.337Z"
      }
    }
  },
  "GET /api/articles/:article_id/comments": {
    "description": "serves an array of all comments on the article with the specified article_id",
    "queries": ["order", "limit", "p"],
    "exampleResponse": {
      "comments": [
        {
          "comment_id": 19,
          "body": "Loved it, great article!",
          "article_id": 2,
          "author": "butter_bridge",
          "votes": 0,
          "created_at": "2023-02-21T15:40:36.337Z"
        }
      ]
    }
  },
  "DELETE /api/comments/:comment_id": {
    "description": "deletes the comment with the specified comment_id from the database",
    "queries": [],
    "exampleResponse": {}
  },
  "PATCH /api/comments/:comment_id": {
    "description": "updates the comment with the specified comment_id. If the request body has an inc_votes property, increments the article's votes property by the value of inc_votes",
    "queries": [],
    "exampleResponse": {}
  },
  "GET /api/users": {
    "description": "serves an array of users",
    "queries": [],
    "exampleResponse": {
      "users": [
        {
          "username": "lurker",
          "name": "do_nothing",
          "avatar_url": "https://www.golenbock.com/wp-content/uploads/2015/01/placeholder-user.png"
        }
      ]
    }
  },
  "POST /api/users": {
    "description": "posts a new user to the database",
    "queries": [],
    "exampleResponse": {
      "postedUser": {
        "username": "lurker",
        "name": "do_nothing",
        "avatar_url": "https://www.golenbock.com/wp-content/uploads/2015/01/placeholder-user.png"
      }
    }
  },
  "GET /api/users/username": {
    "description": "serves the user object with the specified username",
    "queries": [],
    "exampleResponse": {
      "user": {
        "username": "lurker",
        "name": "do_nothing",
        "avatar_url": "https://www.golenbock.com/wp-content/uploads/2015/01/placeholder-user.png"
      }
    }
  },
  "DELETE /api/users/username": {
    "description": "deletes the user object with the specified username. If the user is the author of any articles, their author property is set to null",
    "queries": [],
    "exampleResponse": {}
  }
}
